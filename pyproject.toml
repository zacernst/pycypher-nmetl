[project]
name = "pycypher-nmetl"
version = "0.0.1"
description = "Declarative ETL using Cypher queries"
readme = "README.md"
requires-python = ">=3.12"
keywords = ["neo4j", "cypher", "etl", "declarative"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # Core dependencies only - specific packages have their own dependencies
    "pycypher",
    "nmetl",
    "fastopendata",
    # Development tools
    "hatch>=1.12.0,<2.0.0",
    "hatchling==1.25",
    "isort>=5.13.2,<6.0.0",
    "ruff>=0.6.3,<1.0.0",
    "uv>=0.4.1,<1.0.0",
    # Documentation
    "sphinx>=5.0.2,<9.0.0",
    "sphinx-autoapi==3.3.1,<4.0.0",
    "sphinx-autodocgen==1.3",
    "sphinx-rtd-theme==2.0.0",
    # Testing
    "pytest>=8.3.2,<9.0.0",
    "pytest-cov>=6.0.0,<7.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pytest-timeout==2.3.1",
    "pytest-unordered==0.6.1,<1.0.0",
    "pytest-xdist>=3.6.1,<4.0.0",
    "pymemcache>=4.0.0",
    "etcd3-py>=0.1.6",
    "rbloom>=1.5.2",
    "snakeviz>=2.2.2",
    "rocksdict>=0.3.25",
    "pandas>=2.2.3",
    "dask[all,complete,dill,distributed]>=2025.4.0",
    "pylint>=3.3.6",
    "pyarrow>=19.0.1",
    "rich>=13.9.4",
    "chardet>=5.2.0",
    "dvc>=3.59.2",
    "prometheus-client>=0.21.1",
    "bandit>=1.8.3",
    "ty>=0.0.1a6",
    "geopandas>=1.1.0",
    "networkx>=3.4.2",
    "pyrefly>=0.18.0",
    "mypy>=1.16.0",
    "frozendict>=2.4.6",
    "pyzmq>=27.0.0",
    "grafana-client>=4.3.2",
    "pyroscope-io>=0.8.11",
    "redis>=6.2.0",
    "python-sat>=1.8.dev20",
]

[[project.authors]]
name = "Zachary Ernst"
email = "zac.ernst@gmail.com"

[[project.maintainers]]
name = "Zachary Ernst"
email = "zac.ernst@gmail.com"

[project.optional-dependencies]
gui = ["PyQt5"]

[project.license]
file = "LICENSE.txt"

[project.urls]
Homepage = "https://github.com/zacernst/pycypher-nmetl"
Documentation = "https://zacernst.github.io/pycypher-nmetl/"

[build-system]
requires = ["hatchling>=1.24.2", "hatch-vcs>=0.3.0"]
build-backend = "hatchling.build"

[tool.uv]

[tool.uv.workspace]
members = ["packages/*"]

[tool.uv.sources]
pycypher = { workspace = true }
nmetl = { workspace = true }
fastopendata = { workspace = true }
shared = { workspace = true }

[tool.pylint.main]
disable = ["line-too-long", "trailing-whitespace", "missing-docstring"]

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
extend-exclude = ["packages/fastopendata/src/fastopendata/ingest.py"]

[tool.ruff.lint]
select = ["ALL"]

[tool.coverage.report]
exclude_also = [
    "def tree",
    "def print_tree",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    # Add your new exclusion pattern here
    "path/to/excluded/file.py"
]

[tool.pytest.ini_options]
addopts = ""
testpaths = ["tests"]
markers = [
    "fact_collection: Tests that require a FactCollection"
]
timeout = 30


[tool.hatch.build.targets.wheel]
universal = true

[tool.hatch.build.targets.sdist]
formats = ["zip"]

[dependency-groups]
dev = [
    "ty>=0.0.1a6",
]

[tool.hatch.build]
include = [
    "README.md",
    "LICENSE.txt",
    "pyproject.toml",
    "packages/pycypher/**/*.py",
    "packages/pycypher/**/*.txt",
    "packages/pycypher/**/*.json",
    "packages/pycypher/**/*.yml",
    "packages/pycypher/**/*.yaml",
    "packages/pycypher/**/*.csv",
    "packages/pycypher/**/*.parquet",
    "packages/nmetl/**/*.py",
    "packages/nmetl/**/*.txt",
    "packages/nmetl/**/*.json",
    "packages/nmetl/**/*.yml",
    "packages/nmetl/**/*.yaml",
    "packages/nmetl/**/*.csv",
    "packages/nmetl/**/*.parquet",
    "packages/fastopendata/**/*.py",
    "packages/fastopendata/**/*.txt",
    "packages/fastopendata/**/*.json",
    "packages/fastopendata/**/*.yml",
    "packages/fastopendata/**/*.yaml",
    "packages/fastopendata/**/*.csv",
    "packages/fastopendata/**/*.parquet",
]
exclude = [
    "packages/fastopendata/raw_data/**",
]
